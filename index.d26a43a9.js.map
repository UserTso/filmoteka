{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-d76294dbb0991e3b.js","src/js/header.js","src/js/gallery.js","node_modules/@parcel/runtime-js/lib/runtime-40519ad1a616e343.js","src/js/modal.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.d26a43a9.js\\\",\\\"fa4Yp\\\":\\\"question-mark.34d36c19.jpeg\\\",\\\"5UbS1\\\":\\\"index.b28ecfd1.css\\\",\\\"ggbzi\\\":\\\"index.91b6990e.js\\\"}\"));","import UnsplashAPI from './fetch-films';\nimport { renderGalleryItems } from './gallery';\nimport { createPagination } from './pagination';\nimport { getSpinner } from './spiner';\n\nconst unsplashAPI = new UnsplashAPI();\n\nconst searchForm = document.querySelector('.search-form');\nconst empty = document.querySelector('.empty');\nconst notFound = document.querySelector('.not-found');\n\nsearchForm.addEventListener('submit', searchFilm);\n\nasync function searchFilm(event) {\n  const spinner = getSpinner();\n\n  event.preventDefault();\n  empty.style.display = 'none';\n  notFound.style.display = 'none';\n  // const seartchResult = event.currentTarget.input.value;\n  unsplashAPI.searchQuery = event.currentTarget.input.value\n    .trim()\n    .toLowerCase();\n\n  // console.log(unsplashAPI.searchQuery);\n  if (unsplashAPI.searchQuery === '') {\n    notFound.style.display = 'none';\n    empty.style.display = 'block';\n    return;\n  }\n  try {\n    searchForm.append(spinner);\n\n    const result = await unsplashAPI.searchMovies();\n    if (result.results.length === 0) {\n      empty.style.display = 'none';\n      notFound.style.display = 'block';\n      return;\n    }\n    const pagination = createPagination({\n      totalItems: result.total_results,\n      page: result.page,\n      totalPages: result.total_pages,\n    });\n    pagination.on('afterMove', event => {\n      unsplashAPI.page = event.page;\n      //  console.log(unsplashAPI.page);\n      unsplashAPI.searchMovies().then(result => {\n        //  console.log(result);\n        notFound.style.display = 'none';\n\n        empty.style.display = 'none';\n        renderGalleryItems(result.results);\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      });\n    });\n    // console.log(results);\n\n    renderGalleryItems(result.results);\n\n    // console.log(results);\n  } catch (error) {\n    console.log(error.message);\n  } finally {\n    spinner.remove();\n  }\n}\n","const gallery = document.querySelector('.gallery-list');\nimport { getSpinner } from './spiner';\n\nimport { createPagination } from './pagination';\nimport UnsplashAPI from './fetch-films';\nconst unsplashAPI = new UnsplashAPI();\n\n// !--------Popular Films to main-------------------\n\nasync function popularFilms() {\n  const spinner = getSpinner();\n\n  try {\n    gallery.append(spinner);\n\n    const result = await unsplashAPI.fetchPopularFilms();\n    // console.log(result);\n    const pagination = createPagination({\n      totalItems: result.total_results > 10000 ? 10000 : result.total_results,\n      page: result.page,\n    });\n    pagination.on('afterMove', event => {\n      unsplashAPI.page = event.page;\n      //  console.log(unsplashAPI.page);\n      unsplashAPI.fetchPopularFilms().then(result => {\n        //  console.log(result);\n        renderGalleryItems(result.results);\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      });\n    });\n\n    renderGalleryItems(result.results);\n  } catch (error) {\n    console.log(error.message);\n  } finally {\n    spinner.remove();\n  }\n}\n\npopularFilms();\n\n// ?-----------------Render Gallery----------------\n\nexport async function renderGalleryItems(films) {\n  try {\n    const { genres } = await unsplashAPI.fetchGeneres();\n    // console.log(genres);\n    const generesConfig = getGeneresConfig(genres);\n    // console.log(generesConfig);\n    // console.log(films);\n    const markup = films\n      .map(film => {\n        return `<li class='list-item'>\n      <img class='poster' src=\"${\n        film.poster_path === null\n          ? new URL('../images/gallery/question-mark.jpeg', import.meta.url)\n          : `https://image.tmdb.org/t/p/w500${film.poster_path}`\n      }\"\n  alt=\"${film.title}\" name=\"${film.id}\"\n  /><h2 class='title'>${film.title}</h2>\n  <p class='info'>${\n    mapGanereId(film.genre_ids, generesConfig) || 'Unknown'\n  } &#124 ${film.release_date.slice(0, 4) || 'Unknown'}</p></li>`;\n      })\n      .join('');\n    gallery.innerHTML = markup;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n// ?----------------Replaces 'id' with ganeres 'name'---------\n\nexport function mapGanereId(filmGeneresId, generesConfig) {\n  return filmGeneresId\n    .map(generes => {\n      return generesConfig[generes] || 'Unknown';\n    })\n    .join(', ');\n}\n\n// ?-------------------Make Obj with id: name------------\n\nexport function getGeneresConfig(allGeneres) {\n  return allGeneres.reduce((previousValue, { name, id }) => {\n    return { ...previousValue, [id]: name };\n  }, {});\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fa4Yp\")).toString();","import UnsplashAPI from './fetch-films';\nconst unsplashAPI = new UnsplashAPI();\n\nimport { getGeneresConfig } from './gallery';\nimport { getSpinner } from './spiner';\n\nimport { onModalBtnClick } from './library-locale-storage';\nconst gallery = document.querySelector('.gallery-list');\nconst modalBackdrop = document.querySelector('.backdrop');\nconst modalWrap = document.querySelector('.modal__contents');\nconst closeBtn = document.querySelector('.modal__btn-close');\n\n// ?_________________OPEN MODAL_______________\n\nasync function openModal(e) {\n  if (e.target.nodeName !== 'IMG') {\n    return;\n  }\n\n  const spinner = getSpinner();\n  const filmId = e.target.name;\n\n  try {\n    // append to the list spinner\n    modalBackdrop.append(spinner);\n\n    const result = await unsplashAPI.fetchFilmInfo(filmId);\n    modalBackdrop.classList.toggle('is-hidden');\n    // console.log(result);\n\n    try {\n      await renderModal(result);\n      onModalBtnClick(result);\n    } catch (error) {\n      console.log(error.message);\n    }\n  } catch (error) {\n    console.log(error.message);\n  } finally {\n    spinner.remove();\n  }\n  document.addEventListener('keydown', closeModalEsc);\n  closeBtn.addEventListener('click', closeModalOnBtnClick);\n  document.addEventListener('click', closeModal);\n}\n\ngallery.addEventListener('click', openModal);\ncloseBtn.removeEventListener('click', closeModalOnBtnClick);\ndocument.removeEventListener('keydown', closeModalEsc);\ndocument.removeEventListener('click', closeModal);\n// ?_____________CLOSE MODAL______________\n\nfunction closeModal(e) {\n  if (e.target === modalBackdrop) {\n    modalBackdrop.classList.toggle('is-hidden');\n    document.removeEventListener('click', closeModal);\n    document.removeEventListener('keydown', closeModalEsc);\n  }\n}\n\nfunction closeModalEsc(e) {\n  if (e.code === 'Escape') {\n    modalBackdrop.classList.toggle('is-hidden');\n    document.removeEventListener('keydown', closeModalEsc);\n  }\n}\n\nfunction closeModalOnBtnClick(e) {\n  modalBackdrop.classList.toggle('is-hidden');\n}\n\n// ?___________________Modal RENDER\n\nasync function renderModal(film) {\n  try {\n    const { genres } = await unsplashAPI.fetchGeneres();\n    // console.log(genres);\n    const generesConfig = getGeneresConfig(genres);\n    // console.log(generesConfig);\n\n    const markup = `<img src=\"${\n      film.poster_path === null\n        ? new URL('../images/gallery/question-mark.jpeg', import.meta.url)\n        : `https://image.tmdb.org/t/p/w500${film.poster_path}`\n    }\" alt=\"photo\" class=\"modal__poster\" />\n        <div>\n          <h2 class=\"modal__title\">${film.title.toUpperCase() || 'Unknown'}</h2>\n          <table class=\"modal__info\">\n            <tr>\n              <th>Vote/Votes</th>\n              <td>\n                <span class=\"modal__info--accent\">${\n                  film.vote_average || 'Unknown'\n                }</span> /\n                <span class=\"modal__info--noaccent\">${\n                  film.vote_count || 'Unknown'\n                }</span>\n              </td>\n            </tr>\n            <tr>\n              <th>Popularity</th>\n              <td>${film.popularity || 'Unknown'}</td>\n            </tr>\n            <tr>\n              <th>Original Title</th>\n              <td>${film.original_title || 'Unknown'}</td>\n            </tr>\n            <tr>\n              <th>Genre</th>\n              <td>${\n                film.genres\n                  .map(genere => {\n                    return genere.name;\n                  })\n                  .join(', ') || 'Unknown'\n              }</td>\n            </tr>\n          </table>\n          <h3 class=\"modal__about--title\">About</h3>\n          <p class=\"modal__about\">\n            ${film.overview || 'Unknown'}\n          </p>\n              <div class=\"modal__btn\">\n      <button type=\"button\" class=\"modal__btn-watched\">add to Watched</button>\n      <button type=\"button\" class=\"modal__btn-queue\">add to queue</button>\n    </div>\n\n        </div>`;\n\n    modalWrap.innerHTML = markup;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$fvCRb","$kyRuT","$7c59f4ec4043ce00$var$gallery","document","querySelector","$7c59f4ec4043ce00$var$unsplashAPI","default","async","spinner","getSpinner","append","result1","fetchPopularFilms","$2nhTy","createPagination","totalItems","total_results","page","on","event","then","result","$7c59f4ec4043ce00$export$678cfa999d90cb0e","results","window","scrollTo","top","behavior","error","console","log","message","remove","$7c59f4ec4043ce00$var$popularFilms","films","genres","fetchGeneres","generesConfig","$7c59f4ec4043ce00$export$802878afc0a53793","markup","map","film","poster_path","URL","$5c6dc89f2bd1f5c5$exports","title","filmGeneresId","generes","join","$7c59f4ec4043ce00$export$e3d1b90cc50e4705","genre_ids","release_date","slice","innerHTML","allGeneres","reduce","previousValue","name","resolve","import","meta","url","toString","$8aad853c076397e7$var$unsplashAPI","$8aad853c076397e7$var$searchForm","$8aad853c076397e7$var$empty","$8aad853c076397e7$var$notFound","addEventListener","event1","preventDefault","style","display","searchQuery","currentTarget","input","value","trim","toLowerCase","searchMovies","totalPages","total_pages","$8a7e756c566dd1ea$var$unsplashAPI","$8a7e756c566dd1ea$var$gallery","$8a7e756c566dd1ea$var$modalBackdrop","$8a7e756c566dd1ea$var$modalWrap","$8a7e756c566dd1ea$var$closeBtn","$8a7e756c566dd1ea$var$closeModal","e","target","classList","toggle","removeEventListener","$8a7e756c566dd1ea$var$closeModalEsc","code","$8a7e756c566dd1ea$var$closeModalOnBtnClick","nodeName","filmId","fetchFilmInfo","toUpperCase","vote_average","vote_count","popularity","original_title","genere","overview","$8a7e756c566dd1ea$var$renderModal","$glfCx","onModalBtnClick"],"version":3,"file":"index.d26a43a9.js.map"}